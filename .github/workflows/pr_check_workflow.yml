# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Build and test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CACHE_NAME: osd-node-modules
  TEST_BROWSER_HEADLESS: 1
  CI: 1
  GCS_UPLOAD_PREFIX: fake
  TEST_OPENSEARCH_DASHBOARDS_HOST: localhost
  TEST_OPENSEARCH_DASHBOARDS_PORT: 6610
  TEST_OPENSEARCH_TRANSPORT_PORT: 9403
  TEST_OPENSEARCH_PORT: 9400

jobs:
  build-lint-test:
    runs-on: ubuntu-latest
    name: Build and Verify
    steps:
      # Access a cache of set results from a previous run of the job
      # This is to prevent re-running steps that were already successful since it is not native to github actions
      # Can be used to verify flaky steps with reduced times
      - name: Restore the cached run
        uses: actions/cache@v2
        with:
          path: |
            job_successful
            linter_results
            bwc_tests_results
          key: ${{ github.run_id }}-${{ github.job }}-${{ github.sha }}
          restore-keys: |
            ${{ github.run_id }}-${{ github.job }}-${{ github.sha }}

      - name: Get if previous job was successful
        id: job_successful
        run: cat job_successful 2>/dev/null || echo 'false'

      - name: Get the previous linter results 
        id: linter_results
        run: cat linter_results 2>/dev/null || echo 'default'

      - name: Get the previous backward compatibility tests results 
        id: bwc_tests_results
        run: cat bwc_tests_results 2>/dev/null || echo 'default'  

      - name: Checkout code
        if: steps.job_successful.outputs.job_successful != 'true'
        uses: actions/checkout@v2

      - name: Setup Node
        if: steps.job_successful.outputs.job_successful != 'true'
        uses: actions/setup-node@v2
        with:
          node-version: "10.24.1"
          registry-url: 'https://registry.npmjs.org'

      - name: Setup Yarn
        if: steps.job_successful.outputs.job_successful != 'true'
        run: |
          npm uninstall -g yarn
          npm i -g yarn@1.22.10

      - name: Run bootstrap
        if: steps.job_successful.outputs.job_successful != 'true'
        run: yarn osd bootstrap

      - name: Run linter
        if: steps.linter_results.outputs.linter_results != 'success'
        id: linter
        run: yarn lint

      - name: Run backward compatibility tests
        if: steps.bwc_tests_results.outputs.bwc_tests_results != 'success'
        id: bwc-tests
        run: |
          wget https://artifacts.opensearch.org/snapshots/core/opensearch/1.2.0-SNAPSHOT/opensearch-min-1.2.0-SNAPSHOT-linux-x64-latest.tar.gz -P 2>/dev/null
          mv opensearch-min-1.2.0-SNAPSHOT-linux-x64-latest.tar.gz opensearch.tar.gz
          tar -xvf opensearch.tar.gz
          wget https://artifacts.opensearch.org/snapshots/core/opensearch-dashboards/1.2.0-SNAPSHOT/opensearch-dashboards-min-1.2.0-SNAPSHOT-linux-x64-latest.tar.gz 2>/dev/null
          mv opensearch-dashboards-min-1.2.0-SNAPSHOT-linux-x64-latest.tar.gz opensearch-dashboards.tar.gz
          tar -xvf opensearch-dashboards.tar.gz
          echo "Found ${{ steps.pl.outputs.path_count }} file(s) with this extension:"
          for i in ${{ steps.pl.outputs.paths }}; do
            echo $i
          done
          chmod 777 ./scripts/bwctest-osd.sh

      # Set cache if linter, unit tests, and integration tests were successful then the job will be marked successful
      # Sets individual results to empower re-runs of the same build without re-running successful steps.
      - if: | 
          (steps.linter.outcome == 'success' || steps.linter.outcome == 'skipped') && 
          (steps.bwc-tests.outcome == 'success' || steps.bwc-tests.outcome == 'skipped')
        run: echo "::set-output name=job_successful::true" > job_successful
      - if: steps.linter.outcome == 'success' || steps.linter.outcome == 'skipped'
        run: echo "::set-output name=linter_results::success" > linter_results
      - if: steps.bwc-tests.outcome == 'success' || steps.bwc-tests.outcome == 'skipped'
        run: echo "::set-output name=bwc_tests_results::success" > bwc_tests_results  
