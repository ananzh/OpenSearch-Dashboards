# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Build and test

# trigger on every commit push and PR for all branches except pushes for backport branches
on:
  push:
    branches: ['**', '!backport/**']
    paths-ignore:
      - '**/*.md'
      - 'docs/**'
  pull_request:
    branches: ['**']
    paths-ignore:
      - '**/*.md'
      - 'docs/**'

env:
  TEST_BROWSER_HEADLESS: 1
  CI: 1
  GCS_UPLOAD_PREFIX: fake
  TEST_OPENSEARCH_DASHBOARDS_HOST: localhost
  TEST_OPENSEARCH_DASHBOARDS_PORT: 6610
  TEST_OPENSEARCH_TRANSPORT_PORT: 9403
  TEST_OPENSEARCH_PORT: 9400
  OSD_SNAPSHOT_SKIP_VERIFY_CHECKSUM: true
  NODE_OPTIONS: "--max-old-space-size=6144 --dns-result-order=ipv4first"

jobs:
  build-lint-test:
    name: Build and Verify on ${{ matrix.name }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        include:
          - os: ubuntu-latest
            name: Linux
          - os: windows-latest
            name: Windows
    runs-on: ${{ matrix.os }}
    steps:
      - name: Configure git's autocrlf (Windows only)
        if: matrix.os == 'windows-latest'
        run: |
          git config --global core.autocrlf false

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup JDK (Windows only)
        if: matrix.os == 'windows-latest'
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          registry-url: 'https://registry.npmjs.org'

      - name: Setup Yarn
        run: |
          npm uninstall -g yarn
          npm i -g yarn@1.22.10
          yarn config set network-timeout 1000000 -g

      - name: Configure Yarn Cache (Linux)
        if: matrix.os != 'windows-latest'
        run: echo "YARN_CACHE_LOCATION=$(yarn cache dir)" >> $GITHUB_ENV

      - name: Configure Yarn Cache (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          echo "YARN_CACHE_LOCATION=$(yarn cache dir)" >> $env:GITHUB_ENV
          echo C:\Program Files\Git\usr\bin>>"%GITHUB_PATH%"

      - name: Initialize Yarn Cache
        uses: actions/cache@v3
        with:
          path: ${{ env.YARN_CACHE_LOCATION }}
          key: yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            yarn-

      - name: Run bootstrap (Linux)
        if: matrix.os != 'windows-latest'
        run: yarn osd bootstrap

      - name: Run bootstrap (Windows)
        if: matrix.os == 'windows-latest'
        run: yarn osd bootstrap || yarn osd bootstrap

      - name: Run linter
        id: linter
        run: yarn lint

      - name: Run integration tests
        id: integration-tests
        run: yarn test:jest_integration:ci
