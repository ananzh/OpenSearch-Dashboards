# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Build and test

# trigger on every commit push and PR for all branches except pushes for backport branches
on:
  push:
    branches: ['**', '!backport/**']
    paths-ignore:
      - '**/*.md'
      - 'docs/**'
  pull_request:
    branches: ['**']
    paths-ignore:
      - '**/*.md'
      - 'docs/**'

env:
  TEST_BROWSER_HEADLESS: 1
  CI: 1
  GCS_UPLOAD_PREFIX: fake
  TEST_OPENSEARCH_DASHBOARDS_HOST: localhost
  TEST_OPENSEARCH_DASHBOARDS_PORT: 6610
  TEST_OPENSEARCH_TRANSPORT_PORT: 9403
  TEST_OPENSEARCH_PORT: 9400
  OSD_SNAPSHOT_SKIP_VERIFY_CHECKSUM: true
  NODE_OPTIONS: "--max-old-space-size=6144 --dns-result-order=ipv4first"
  CHROME_VERSION: 1109208

jobs:
  functional-tests:
    name: Run functional tests on ${{ matrix.name }} (ciGroup${{ matrix.group }})
    strategy:
      matrix:
        os: [ubuntu-latest, windows-2019]
        group: [1]
        include:
          - os: ubuntu-latest
            name: Linux
          - os: windows-2019
            name: Windows
    runs-on: ${{ matrix.os }}
    steps:
      - run: echo Running functional tests for ciGroup${{ matrix.group }}

      - name: Setup Chrome
        id: setup-chrome
        uses: browser-actions/setup-chrome@v1
        with:
          chrome-version: ${{ env.CHROME_VERSION }}

      - name: Set Chrome Path
        if: matrix.os != 'windows-2019'
        run: |
          echo "TEST_BROWSER_BINARY_PATH=${{ steps.setup-chrome.outputs.chrome-path }}" >> $GITHUB_ENV

      - name: Set Chrome Path (Windows)
        if: matrix.os == 'windows-2019'
        run: |
          echo "TEST_BROWSER_BINARY_PATH=${{ steps.setup-chrome.outputs.chrome-path }}" >> $env:GITHUB_ENV

      - name: Configure git's autocrlf (Windows only)
        if: matrix.os == 'windows-2019'
        run: |
          git config --global core.autocrlf false

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup JDK (Windows only)
        if: matrix.os == 'windows-2019'
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          registry-url: 'https://registry.npmjs.org'

      - name: Setup Yarn
        run: |
          npm uninstall -g yarn
          npm i -g yarn@1.22.10
          yarn config set network-timeout 1000000 -g

      - name: Setup chromedriver
        run: node scripts/upgrade_chromedriver.js

      - name: Run bootstrap (Linux)
        if: matrix.os != 'windows-2019'
        run: yarn osd bootstrap

      - name: Run bootstrap (Windows)
        if: matrix.os == 'windows-2019'
        run: yarn osd bootstrap || yarn osd bootstrap

      #- name: Build plugins
      #  run: node scripts/build_opensearch_dashboards_platform_plugins --no-examples --workers 10

      - name: Run CI test group ${{ matrix.group }}
        id: ftr-tests
        run: node scripts/functional_tests.js --config test/functional/config.js --include ciGroup${{ matrix.group }}
        env:
          CI_GROUP: ciGroup${{ matrix.group }}
          CI_PARALLEL_PROCESS_NUMBER: ciGroup${{ matrix.group }}
          JOB: ci${{ matrix.group }}
          CACHE_DIR: ciGroup${{ matrix.group }}

      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: failure-artifacts-ci${{ matrix.group }}
          path: |
            test/*/failure_debug/
            test/*/screenshots/
